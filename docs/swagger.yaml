definitions:
  app.CompareResponse:
    properties:
      hammingDestance:
        type: integer
      isSimilar:
        type: boolean
      pHash1:
        type: string
      pHash2:
        type: string
    type: object
  app.UploadResponse:
    properties:
      imageToken:
        type: string
      pHash:
        type: string
    type: object
  httpext.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: API for images
  title: Imloader Server API
  version: "0.1"
paths:
  /compare:
    post:
      consumes:
      - multipart/form-data
      description: compare two jpg image (max allowed size - 50 mb)
      parameters:
      - description: image1 to compare
        in: formData
        name: image1
        required: true
        type: file
      - description: image2 to compare
        in: formData
        name: image2
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.CompareResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.ErrorResponse'
      summary: compare two jpg image
  /get/{id}:
    get:
      description: return image by its id
      parameters:
      - description: image id
        in: path
        name: id
        required: true
        type: string
      - description: scale coeff
        in: query
        name: scale
        type: number
      produces:
      - image/jpeg
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpext.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.ErrorResponse'
      summary: get image by its id
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: upload jpg image into MySQL database (max allowed size - 50 mb)
      parameters:
      - description: image to upload
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.UploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpext.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpext.ErrorResponse'
      summary: Upload jpg image
schemes:
- http
- https
swagger: "2.0"
